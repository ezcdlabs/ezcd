name: CI

on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.23.1'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Set up pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Install dependencies
      run: make install

    - name: Build SolidJS frontend app
      run: make build-web

    - name: Run tests
      run: make test

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        version: ~> v2
        args: release --clean --snapshot 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Smoke test CLI
      run: ./dist/cli_linux_amd64_v1/ezcd-cli --version

    - name: Smoke test Server
      run: docker run ghcr.io/ezcdlabs/ezcd-server:snapshot --version

    - name: Save Docker image
      run: docker save ghcr.io/ezcdlabs/ezcd-server:snapshot -o ezcd-server-snapshot.tar

    - name: Upload CLI artifact
      uses: actions/upload-artifact@v4
      with:
        name: cli
        #  note that the result is just the ezcd-cli file in the artifact with no directories
        path: ./dist/cli_linux_amd64_v1/ezcd-cli

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: ezcd-server-snapshot.tar

  acceptance-tests:
    runs-on: ubuntu-latest
    needs: ci

    env:
      PGHOST: localhost
      PGUSER: postgres
      PGPASSWORD: password

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ezcd
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5


    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download CLI artifact
      uses: actions/download-artifact@v4
      with:
        name: cli
        # note that the result is a file with path: ./dist/ezcd-cli
        path: ./dist

    - name: Download Docker image artifact
      uses: actions/download-artifact@v4
      with:
        name: docker-image
        path: .

    - name: Load Docker image
      run: docker load -i ezcd-server-snapshot.tar

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Set up pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    
    - name: Allow exec on ezcd-cli
      run: chmod +x dist/ezcd-cli

    - name: Run database migrations
      run: |
        for sql_file in $(ls schema/*.sql); do
          psql -d ezcd -f $sql_file
        done

    - name: Start server container
      run: docker run -d --rm --name ezcd-server --network=host -p 3923:3923 -e EZCD_DATABASE_URL=${EZCD_DATABASE_URL} ghcr.io/ezcdlabs/ezcd-server:snapshot

    - name: Wait for server to start
      run: |
        counter=0
        echo "Waiting for server to start"
        response=$(curl -s http://localhost:3923/health)
        while [ "$(echo $response | jq -r '.status')" != "healthy" ]; do
          counter=$((counter+1))
          if [ -z "$response" ]; then
            echo "Server not ready yet ($counter seconds): [empty]"
          else
            echo "Server not ready yet ($counter seconds): $response"
          fi
          if [ $counter -gt 10 ]; then
            echo "Server did not start in time"
            exit 1
          fi
          sleep 1
          response=$(curl -s http://localhost:3923/health)
        done
        echo "Server is ready ($counter seconds)"

    - name: Acceptance tests
      run: cd acceptance && pnpm dlx playwright test --project="Google Chrome"
    
    - name: Save server logs
      if: always()
      run: 
        docker logs ezcd-server > ezcd-server-logs.txt
    
    - name: Dump ezcd database
      if: always()
      run: pg_dump ezcd -f ezcd_dump.sql

    - name: Stop server container
      if: always()
      run: docker stop ezcd-server

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: ezcd-database-dump
        path: ezcd_dump.sql
        retention-days: 30

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: ezcd-server-logs
        path: ezcd-server-logs.txt
        retention-days: 30

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: acceptance/playwright-report/
        retention-days: 30